ext.maven_name='EquoIDE for Gradle'
ext.maven_artifact = 'equo-ide-gradle-plugin'
ext.maven_desc=干.proj('gradlePlugin_equoIde_desc', 'Marketing description of EquoIDE')

apply from: 干.file('changelog.gradle')
apply from: 干.file('gradle-plugin.gradle')
apply plugin: 'com.adarshr.test-logger'
sourceCompatibility = java_compat
targetCompatibility = java_compat
tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}
dependencies {
	implementation gradleApi()
	implementation project(':solstice')
	implementation 'com.diffplug.durian:durian-swt.os:4.1.1'
	testImplementation "org.junit.jupiter:junit-jupiter:$VER_JUNIT"
	testImplementation "org.assertj:assertj-core:$VER_ASSERTJ"
	testImplementation "io.github.origin-energy:java-snapshot-testing-junit5:$VER_SNAPSHOT_TESTING"
	testImplementation gradleTestKit()
}
apply from: 干.file('maven.gradle')
apply from: 干.file('sonatype.gradle')

test {
	useJUnitPlatform()
	if (System.env['CI'] == null) {
		systemProperty "updateSnapshot", ""
	}
}

spotless {
	groovyGradle {
		target '*.gradle', 'example/*.gradle'
	}
}

// see the top of <project root>/P2_MULTITOOL.md for a checklist
tasks.register('p2multitool', Tar) {
	archiveBaseName = 'p2multitool'
	archiveVersion = spotlessChangelog.versionLast
	from 'example-gradle', {
		include 'gradle/**'
		include 'gradlew'
		include 'gradlew.bat'
		include '*.gradle'
	}
	from '../', {
		include 'P2_MULTITOOL.md'
		include 'p2*.png'
	}
	destinationDirectory = file("../")
	compression = Compression.NONE
}